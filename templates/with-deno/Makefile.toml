
# Build wasm server
[tasks.cargo-build]
command = "cargo"
args = ["build", "--target", "wasm32-unknown-unknown"]

[tasks.wasm-bindgen]
command = "wasm-bindgen"
args = [
    "../../target/wasm32-unknown-unknown/debug/with_deno.wasm",
    "--target",
    "deno",
    "--out-dir",
    "build/",
]

[tasks.build-wasm]
dependencies = ["cargo-build", "wasm-bindgen"]

# Build wasm client
[tasks.cargo-build-client]
command = "cargo"
args = ["build", "--target", "wasm32-unknown-unknown", "--features", "client"]

[tasks.wasm-bindgen-client]
command = "wasm-bindgen"
args = [
    "../../target/wasm32-unknown-unknown/debug/with_deno.wasm",
    "--target",
    "web",
    "--out-dir",
    "public/",
    "--no-typescript",
]

[tasks.build-wasm-client]
dependencies = ["cargo-build-client", "wasm-bindgen-client"]

[tasks.build]
dependencies = ["build-wasm", "build-wasm-client"]


# Start deno server
[tasks.run-with-deno]
command = "deno"
args = ["run", "--allow-read", "--allow-net", "--allow-env", "src/index.ts"]

[tasks.run-with-deno.env]
HASHIRA_WASM_LIB = "with_deno"

[tasks.run]
dependencies = ["build", "run-with-deno"]


# Deploy to deno deploy

[tasks.install-deployctl]
install_script = '''
deno install --allow-read --allow-write --allow-env --allow-net --allow-run --no-check --force https://deno.land/x/deploy/deployctl.ts
'''

[tasks.run-deployctl]
command = "deployctl"
args = [
    "deploy",
    "--project={{deno-deploy-project-name}}",
    "src/index.ts",
    "--exclude",
    "target/",
]

[tasks.deploy]
dependencies = ["build", "install-deployctl", "run-deployctl"]
