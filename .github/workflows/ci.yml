name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  # Build and run linter
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v3
      - run: cargo build --verbose
      - run: cargo build --features client --verbose
      - run: cargo clippy -- -D warnings

  # Run tests
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: Test | ${{ matrix.os }}
    steps:
      # Cache cargo dependencies
      - name: Cache Cargo
        id: cache-test-cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - if: ${{ steps.cache-test-cargo.outputs.cache-hit != 'true' }}
        name: List dependencies
        continue-on-error: true
        run: cargo tree

      # Run actual tests
      - uses: actions/checkout@v3
      - run: cargo test --verbose
      - run: cargo test --features client --verbose
  cli:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        template: ['with-actix-web', 'with-axum', 'with-rocket', 'with-tide', 'with-warp']
    runs-on: ${{ matrix.os }}
    name: Template (${{ matrix.template }}) | ${{ matrix.os }}
    steps:
      # Cache cargo dependencies
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      # Install CLI and Build
      - uses: actions/checkout@v3
      - run: cargo install --path ./packages/hashira-cli
      - run: cargo install cargo-generate
      - run: cargo generate --git https://github.com/Neo-Ciber94/hashira.git templates/${{ matrix.template }} --name ${{ matrix.template }}-template
      - run: hashira build
      
  cli-deno:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: Template (with-deno) | ${{ matrix.os }}
    steps:
      # Cache cargo dependencies
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Install CLI and Build
      - uses: actions/checkout@v3
      - run: cargo install --path ./packages/hashira-cli
      - run: cargo install cargo-generate
      - run: cargo install cargo-make
      - run: cargo install deno
      - run: cargo generate --git https://github.com/Neo-Ciber94/hashira.git templates/with-deno --name with-deno-template
      - run: cargo make build